{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web3-auth-service
  labels:
    app: web3-auth-service
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
{{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web3-auth-service
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podsLabels }}
{{ toYaml .Values.podsLabels | indent 6 }}
{{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: web3-auth-service
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.psql.username }}.{{ .Values.database.psql.name }}.credentials.postgresql.acid.zalan.do
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.psql.username }}.{{ .Values.database.psql.name }}.credentials.postgresql.acid.zalan.do
              key: password
        - name: POSTGRES_DATABASE
          value: {{ .Values.database.psql.database }}
        - name: POSTGRES_HOST
          value: {{ .Values.database.psql.hostname }}.{{ .Release.Namespace }}.svc.cluster.local
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRESQL_URL
          value: postgres://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)
{{- range $pkey, $pval := .Values.env }}
        - name: {{ $pkey }}
          value: {{ quote $pval }}
{{- end }}
        ports:
        - containerPort: 5002
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.probePath | default .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.probePath | default .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
{{- end }}
